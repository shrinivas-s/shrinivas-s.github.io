{"version":3,"sources":["App.js","reportWebVitals.js","index.js","components/NameCard.js","me.jpeg"],"names":["App","useState","setHovered","className","NameCard","onHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","calcY","interpolator","calcX","openProfile","window","open","mouseOver","setMouseOver","transition","setTransition","isReady","useRef","card","useEffect","setTimeout","current","ref","onMouseOver","e","onMouseLeave","val","style","setProperty","setImmediate","onMouseMove","clientX","clientY","x","offsetLeft","y","offsetTop","parseFloat","toFixed","onClick","src","mydp","alt"],"mappings":"uNAeeA,MAXf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACGC,GADH,WAEb,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAMA,UAAU,cAAhB,iBACA,cAACC,EAAA,EAAD,CAAUC,QAASH,IACnB,sBAAMC,UAAU,eAAhB,sBCESG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mGCZMc,EAAQC,IAAa,CACzB,CAAC,EAAG,IACJ,CAAC,KAAM,MAGHC,EAAQD,IAAa,CACzB,CAAC,GAAI,IACL,CAAC,IAAK,MAGFE,EAAc,kBAAMC,OAAOC,KAAK,wCAsEvBrB,IApEf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACKJ,oBAAS,GADd,mBACtByB,EADsB,KACXC,EADW,OAEO1B,mBAAS,IAFhB,mBAEtB2B,EAFsB,KAEVC,EAFU,KAGvBC,EAAUC,kBAAO,GACjBC,EAAOD,mBA2Cb,OANAE,qBAAU,WACRC,YAAW,kBAAOJ,EAAQK,SAAU,IAAO,OAC1C,IACHF,qBAAU,WACR5B,EAAQqB,KACP,CAACA,EAAWrB,IAEb,sBACE+B,IAAKJ,EACL7B,UAAS,eAAUuB,EAAY,OAAS,IACxCW,YA7CgB,SAACC,GACdR,EAAQK,SAGbR,GAAa,IA0CXY,aAxCiB,SAACD,GACfR,EAAQK,UAGbN,GAAc,SAACW,GAAD,MAAU,CAAEZ,WAAY,0BACtCI,EAAKG,QAAQM,MAAMC,YACjB,YADF,oCAGE,aAEFC,EAAahB,GAAa,IAC1BO,YAAW,kBAAML,EAAc,MAAK,OA8BlCe,YA5BgB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC9B,GAAKhB,EAAQK,QAAb,CAIA,IAAMY,EAAIF,EAAUb,EAAKG,QAAQa,WAC3BC,EAAIH,EAAUd,EAAKG,QAAQe,UACjCrB,EAAc,IACdG,EAAKG,QAAQM,MAAMC,YACjB,YADF,0DAEqDS,WACjD7B,EAAM2B,IACNG,QAAQ,GAJZ,wBAI8BD,WAAW/B,EAAM2B,IAAIK,QAAQ,GAJ3D,QAKE,eAgBAX,MAAK,eAAOb,GACZyB,QAAS9B,EAPX,UASE,qBAAK+B,IAAKC,IAAMC,IAAI,YAAYrD,UAAU,UAE1C,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAMA,UAAU,OAAhB,sC,8DC7EK,QAA0B,kC","file":"static/js/main.56373292.chunk.js","sourcesContent":["import \"./App.scss\";\nimport { useState } from \"react\";\nimport NameCard from \"./components/NameCard\";\n\nfunction App() {\n  const [hovered, setHovered] = useState(false);\n  return (\n    <div className=\"App\">\n      <span className=\"bgname left\">Shr</span>\n      <NameCard onHover={setHovered} />\n      <span className=\"bgname right\">ivas</span>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState, useRef, useEffect } from \"react\";\nimport interpolator from \"linear-interpolator\";\nimport mydp from \"../me.jpeg\";\n\nconst calcY = interpolator([\n  [0, 20],\n  [300, -20],\n]);\n\nconst calcX = interpolator([\n  [0, -20],\n  [200, 20],\n]);\n\nconst openProfile = () => window.open(\"https://www.linkedin.com/in/0xshri/\");\n\nfunction NameCard({ onHover }) {\n  const [mouseOver, setMouseOver] = useState(false);\n  const [transition, setTransition] = useState({});\n  const isReady = useRef(false);\n  const card = useRef();\n\n  const onMouseOver = (e) => {\n    if (!isReady.current) {\n      return;\n    }\n    setMouseOver(true);\n  };\n  const onMouseLeave = (e) => {\n    if (!isReady.current) {\n      return;\n    }\n    setTransition((val) => ({ transition: \"all ease-in-out .5s\" }));\n    card.current.style.setProperty(\n      \"transform\",\n      `perspective(400px) scale3d(1,1,1)`,\n      \"important\"\n    );\n    setImmediate(setMouseOver(false));\n    setTimeout(() => setTransition({}), 600);\n  };\n  const onMouseMove = ({ clientX, clientY }) => {\n    if (!isReady.current) {\n      return;\n    }\n\n    const x = clientX - card.current.offsetLeft;\n    const y = clientY - card.current.offsetTop;\n    setTransition({});\n    card.current.style.setProperty(\n      \"transform\",\n      `perspective(400px) scale3d(1.1,1.1,1.1) rotateX(${parseFloat(\n        calcX(y)\n      ).toFixed(2)}deg) rotateY(${parseFloat(calcY(x)).toFixed(2)}deg)`,\n      \"important\"\n    );\n  };\n  useEffect(() => {\n    setTimeout(() => (isReady.current = true), 2000);\n  }, []);\n  useEffect(() => {\n    onHover(mouseOver);\n  }, [mouseOver, onHover]);\n  return (\n    <div\n      ref={card}\n      className={`card ${mouseOver ? \"zoom\" : \"\"}`}\n      onMouseOver={onMouseOver}\n      onMouseLeave={onMouseLeave}\n      onMouseMove={onMouseMove}\n      style={{ ...transition }}\n      onClick={openProfile}\n    >\n      <img src={mydp} alt=\"Shrinivas\" className=\"image\" />\n\n      <div className=\"content\">\n        <div className=\"header\">\n          <span className=\"name\">Full Stack Dev</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NameCard;\n","export default __webpack_public_path__ + \"static/media/me.a84a4590.jpeg\";"],"sourceRoot":""}